<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.xenei</groupId>
	<artifactId>robotNavigation</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<dl4j-master.version>1.0.0-M2.1</dl4j-master.version>
		<junit.version>5.10.0</junit.version>
		<junit.platform.version>1.8.1</junit.platform.version>
		<logback.version>1.2.3</logback.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- deeplearning4j-core: contains main functionality and neural
			networks -->
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-core</artifactId>
			<version>${dl4j-master.version}</version>
		</dependency>

		<!--
        ND4J backend: every project needs one of these. The backend defines the
			hardware on which network training
        will occur. "nd4j-native-platform" is for CPUs only (for running on all
			operating systems).
        -->
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>nd4j-native</artifactId>
			<version>${dl4j-master.version}</version>
		</dependency>

		<!-- CUDA: to use GPU for training (CUDA) instead of CPU, uncomment
			this, and remove nd4j-native-platform -->
		<!-- Requires CUDA to be installed to use. Change the version (8.0,
			9.0, 9.1) to change the CUDA version -->


		<!-- Optional, but recommended: if you use CUDA, also use CuDNN. To
			use this, CuDNN must also be installed -->
		<!-- See:
		https://deeplearning4j.konduit.ai/config/backends/config-cudnn#using-deeplearning-4-j-with-cudnn -->


		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		
		
<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
<dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-lang3</artifactId>
    <version>3.13.0</version>
</dependency>


	</dependencies>
</project>